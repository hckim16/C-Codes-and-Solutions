#include <iostream>

int main()
{
    int p[] = {10,5,2,20,12,4,60};
    int M[7][7] = {0};
    int S[7][7] = {0};
    int n = 7;
    int dist, row, col;
    int min, matrixChain;
    
    for(dist = 1; dist < n; dist++){
        for(row = 1; row < n-dist; row++){
            col = row + dist;
            min = 1 << 30;
            for(int k = row; k < col; k++){
                matrixChain = M[row][k] + M[k+1][col] + p[row-1]*p[k]*p[col];
                if(matrixChain < min){
                    min = matrixChain;
                    S[row][col] = k;
                }
                M[row][col] = min;
            }
        }
    }
    
    std::cout << "Minimum (Optimum) number of multiplications per cell: " << std::endl;
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            std::cout << M[i][j] << " ";
        }
        std::cout << std::endl;
    }
    std::cout << std::endl;
    std::cout << "The minimum (optimum) number of multiplications is located at cell[1][n]." << std::endl;
    std::cout << "The minimum (optimum) number of multiplications is " << M[1][n-1] << std::endl;
    
    std::cout << std::endl;
    std::cout << "The order of multiplicatios begans from cell[1][n]: " << std::endl;
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            std::cout << S[i][j] << " ";
        }
        std::cout << std::endl;
    }
    return 0;
}

/******OutPut********
Minimum (Optimum) number of multiplications per cell: 
0 0 0 0 0 0 0 
0 0 100 500 820 756 2356 
0 0 0 200 600 616 1656 
0 0 0 0 480 576 1056 
0 0 0 0 0 960 5760 
0 0 0 0 0 0 2880 
0 0 0 0 0 0 0 

The minimum (optimum) number of multiplications is located at cell[1][n].
The minimum (optimum) number of multiplications is 2356

The order of multiplicatios begans from cell[1][n]: 
0 0 0 0 0 0 0 
0 0 1 2 2 2 2 
0 0 0 2 2 2 2 
0 0 0 0 3 4 5 
0 0 0 0 0 4 5 
0 0 0 0 0 0 5 
0 0 0 0 0 0 0 
Program ended with exit code: 0

*********************/
